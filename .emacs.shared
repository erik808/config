
;;==================== Notes ================================================
;; Some package dependencies:
;;  - GNU global
;;  - Exuberant ctags
;;
;; byte recompiling elpa:
;; (byte-recompile-directory (expand-file-name "~/.emacs.d/elpa") 0 t)
;;===========================================================================

(add-to-list 'load-path "~/.emacs.d")
(add-to-list 'load-path "~/.emacs.d/emacs-color-theme-solarized-master/")
(add-to-list 'custom-theme-load-path "~/.emacs.d/emacs-color-theme-solarized-master/")
(add-to-list 'custom-theme-load-path "~/config")

;;======================== Package manager =====================================
(require 'package)
(add-to-list 'package-archives
			 '("marmalade" .
			   "http://marmalade-repo.org/packages/"))
(add-to-list 'package-archives
             '("melpa-stable" . "http://stable.melpa.org/packages/") t)
(package-initialize)
;;==============================================================================

;;=============== Some modes ===============================================
(scroll-bar-mode -1)
(tool-bar-mode -1)
(menu-bar-mode -1)
(savehist-mode 1)
(show-paren-mode 1)
(which-func-mode 1)
(global-linum-mode -1)
(column-number-mode 1)
(global-auto-revert-mode t)
;;===========================================================================

;;=============== Smooth scrolling =====================================
;; scroll one line at a time (less "jumpy" than defaults)
(setq mouse-wheel-scroll-amount '(2 ((shift) . 1))) ;; one line at a time
(setq mouse-wheel-progressive-speed nil) ;; don't accelerate scrolling
(setq mouse-wheel-follow-mouse 't) ;; scroll window under mouse
(setq scroll-step 2) ;; keyboard scroll one line at a time
;;======================================================================

;;========================= org-mode ==========================
(require 'org)
(define-key global-map "\C-cl" 'org-store-link)
(define-key global-map "\C-ca" 'org-agenda)
(setq org-log-done t)
(setq org-agenda-files (list "~/Dropbox/todo.org"))
;;=============================================================

(define-key global-map (kbd "RET") 'newline-and-indent)

(setq-default c-default-style "linux"
			  tab-width 4
			  c-basic-offset 4
			  inden-tabs-mode t)

(setq inhibit-startup-screen t)
(setq linum-format "%d ")

;;========== printing =====================================
(setq ps-print-color-p 'color)
(setq ps-number-of-columns 1)
(setq ps-font-size 10)
(setq ps-line-number t)
(setq ps-line-number-font-size 7)
(setq ps-line-number-font 'Courier)
(setq ps-line-number-step 1)
;;=========================================================

;;========== multiple cursors =============================
(require 'multiple-cursors)
(global-set-key (kbd "C-M-d") 'mc/mark-next-like-this)
(global-set-key (kbd "C-M-s") 'mc/mark-previous-like-this)
;;=========================================================

;;============= commenting ================================
(defun comment-eclipse ()
  (interactive)
  (let ((start (line-beginning-position))
        (end (line-end-position)))
    (when (or (not transient-mark-mode) (region-active-p))
      (setq start (save-excursion
                    (goto-char (region-beginning))
                    (beginning-of-line)
                    (point))
            end (save-excursion
                  (goto-char (region-end))
                  (end-of-line)
                  (point))))
    (comment-or-uncomment-region start end)))
(global-set-key (kbd "C-c c") 'comment-eclipse)
;;=========================================================

;;---------- switch between header and implementation -----
(global-set-key (kbd "C-c f") 'ff-find-other-file)
;;---------- expand region --------------------------------
(require 'expand-region)
(global-set-key (kbd "C-c e") 'er/expand-region)
;;---------------------------------------------------------

;;===================== helm ================================
(add-to-list 'load-path "~/.emacs.d/helm/")
(require 'helm-config)
(require 'helm)
(global-set-key (kbd "M-x") 'helm-M-x)
(global-set-key (kbd "C-x f") 'helm-for-files)
(global-set-key (kbd "C-x C-b") 'helm-buffers-list)
(setq helm-display-header-line nil)
(set-face-attribute 'helm-source-header nil :height .8)
(helm-autoresize-mode 1)
(setq helm-autoresize-max-height 30)
(setq helm-autoresize-min-height 30)
;;===========================================================

;;========= fill column  ===================================
(require 'fill-column-indicator)
(setq fci-rule-column 83)
(setq fci-rule-color "gray")
;;==========================================================

;;;;========== color theme ==================================
(if (eq window-system 'x)
	(load-theme 'monokai_custom t))
;;;;=========================================================

;; ======== sr-speedbar =====================================
(require 'sr-speedbar)
(global-set-key (kbd "s-s") 'sr-speedbar-toggle)
(setq sr-speedbar-right-side nil)
;; ==========================================================

;; ============= Ctrl-Tab  ==================================
(global-set-key (kbd "s-a") 'other-window)
;; ==========================================================

;; ============= AucTeX stuff ===============================
(setq-default TeX-master "main")
(setq-default TeX-command-default "LaTeX")
(setq-default TeX-PDF-mode t)
;; ==========================================================

;; ================ auto complete ===========================
(require 'auto-complete)
(global-auto-complete-mode t)
(require 'auto-complete-config)
(ac-config-default)
(setq ac-source-yasnippet nil)
;; ==========================================================

;;========= ggtags == =====================================
(require 'ggtags)
(add-hook 'c-mode-common-hook
          (lambda ()
            (when (derived-mode-p 'c-mode 'c++-mode 'java-mode 'f90-mode)
              (ggtags-mode 1))))
;;=========================================================

;;============== move text ======================================
(global-set-key (kbd "M-<up>") 'move-text-up)
(global-set-key (kbd "M-<down>") 'move-text-down)
;;===============================================================

;;================ height of status bar   ====================================
(set-face-attribute 'mode-line nil :height 90)
;;============================================================================

;;========================= Customized stuff =================================
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes (quote ("266fc5aadc115494332cecee0f45b51f65950932b34ed95f82f5c7673621308d" "756597b162f1be60a12dbd52bab71d40d6a2845a3e3c2584c6573ee9c332a66e" "7836341c5cf90dbc0370e8d1112cfba0b3fa945051cd9f97eb35d7968d85e265" "eaa654d1342e71468b516a2eaf14931698f25b501e21c4a9260890d07b2d43b1" "b777c9055316d6b57c96f1b8788ea55c2fb7d23744e4ae6a997e7969b547cfea" "fc5fcb6f1f1c1bc01305694c59a1a861b008c534cae8d0e48e4d5e81ad718bc6" "1e7e097ec8cb1f8c3a912d7e1e0331caeed49fef6cff220be63bd2a6ba4cc365" "124add37965936ba44198f828294074663b27965c15cdbacd61a9fe8572314cf" "71c16f883fbdfeb656b33c63ad109bb6d7ed2fe2226451fb8253774ea3ee5f02" default)))
 '(font-use-system-font t)
 '(org-export-latex-packages-alist (quote ("\\newcommand{\\D}[3]{\\ensuremath{\\frac{\\partial^{#1} {#2}}{\\partial {#3}^{#1}}}}" "\\newcommand{\\bvec}[1]{\\ensuremath{\\mathbf{#1}}}")))
 '(org-file-apps (quote ((auto-mode . emacs) ("\\.mm\\'" . default) ("\\.x?html?\\'" . default) ("\\.pdf\\'" . system) ("\\.eps\\'" . system))))
 '(org-format-latex-options (quote (:foreground default :background default :scale 1.7 :html-foreground "Black" :html-background "Transparent" :html-scale 1.0 :matchers ("begin" "$1" "$" "$$" "\\(" "\\["))))
 '(preview-auto-reveal t)
 '(preview-default-document-pt 12)
 '(tool-bar-mode nil)
 '(transient-mark-mode (quote (only . t))))

(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(which-func ((t (:inherit font-lock-function-name-face :background "gray22" :foreground "dark orange"))))
 '(whitespace-empty ((t nil)) t)
 '(whitespace-hspace ((t nil)) t)
 '(whitespace-indentation ((t nil)) t)
 '(whitespace-line ((t (:foreground "violet"))) t)
 '(whitespace-newline ((t (:foreground "gray12" :weight normal))) t)
 '(whitespace-space ((t (:foreground "gray11"))) t)
 '(whitespace-space-after-tab ((t nil)) t)
 '(whitespace-space-before-tab ((t nil)) t)
 '(whitespace-tab ((t (:foreground "gray11"))) t)
 '(whitespace-trailing ((t (:weight bold))) t))
